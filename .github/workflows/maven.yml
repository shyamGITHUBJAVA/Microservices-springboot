name: ci/cd pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: shyam583/service-inventory
          tags: latest
          registry: docker.io
          dockerfile: service-inventory/Dockerfile
          context: service-inventory
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Ensure Minikube is running
        shell: powershell
        run: |
          $status = minikube status
          if ($status -notmatch "Running") {
              Write-Host "Minikube not running, starting it..."
              minikube start --driver=hyperv --memory=4g --cpus=2
          } else {
              Write-Host "Minikube already running."
          }
          
          # Ensure kubectl is using Minikube context
          try {
              kubectl config use-context minikube
          } catch {
              kubectl config set-context minikube --cluster=minikube --user=minikube
          }

      - name: Update Kubernetes Deployment
        shell: powershell
        run: |
          $deployment = kubectl get deployment springboot-example --ignore-not-found
          if (-not $deployment) {
              kubectl create deployment springboot-example --image=shyam583/service-inventory:latest
              kubectl expose deployment springboot-example --type=NodePort --port=8082 --target-port=8082
          } else {
              kubectl set image deployment/springboot-example service-inventory=shyam583/service-inventory:latest
          }

      - name: Wait for Pods to be ready
        run: |
          kubectl wait --for=condition=available --timeout=600s deployment/springboot-example

      - name: Show Service URL
        run: |
          kubectl get svc springboot-example
